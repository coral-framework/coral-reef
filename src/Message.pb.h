// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto__INCLUDED
#define PROTOBUF_Message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace reef {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Message_2eproto();
void protobuf_AssignDesc_Message_2eproto();
void protobuf_ShutdownFile_Message_2eproto();

class DataType;
class ReturnData;
class VirtualAddress;
class Message_Call;
class Message_Field;
class Message_New;
class Message;

enum Message_Type {
  Message_Type_TYPE_NEW = 0,
  Message_Type_TYPE_FIELD = 1,
  Message_Type_TYPE_CALL = 2
};
bool Message_Type_IsValid(int value);
const Message_Type Message_Type_Type_MIN = Message_Type_TYPE_NEW;
const Message_Type Message_Type_Type_MAX = Message_Type_TYPE_CALL;
const int Message_Type_Type_ARRAYSIZE = Message_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_Type_descriptor();
inline const ::std::string& Message_Type_Name(Message_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_Type_descriptor(), value);
}
inline bool Message_Type_Parse(
    const ::std::string& name, Message_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_Type>(
    Message_Type_descriptor(), name, value);
}
// ===================================================================

class DataType : public ::google::protobuf::Message {
 public:
  DataType();
  virtual ~DataType();
  
  DataType(const DataType& from);
  
  inline DataType& operator=(const DataType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataType& default_instance();
  
  void Swap(DataType* other);
  
  // implements Message ----------------------------------------------
  
  DataType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataType& from);
  void MergeFrom(const DataType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:reef.DataType)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 dummy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static DataType* default_instance_;
};
// -------------------------------------------------------------------

class ReturnData : public ::google::protobuf::Message {
 public:
  ReturnData();
  virtual ~ReturnData();
  
  ReturnData(const ReturnData& from);
  
  inline ReturnData& operator=(const ReturnData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnData& default_instance();
  
  void Swap(ReturnData* other);
  
  // implements Message ----------------------------------------------
  
  ReturnData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnData& from);
  void MergeFrom(const ReturnData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .reef.DataType arguments = 1;
  inline int arguments_size() const;
  inline void clear_arguments();
  static const int kArgumentsFieldNumber = 1;
  inline const ::reef::DataType& arguments(int index) const;
  inline ::reef::DataType* mutable_arguments(int index);
  inline ::reef::DataType* add_arguments();
  inline const ::google::protobuf::RepeatedPtrField< ::reef::DataType >&
      arguments() const;
  inline ::google::protobuf::RepeatedPtrField< ::reef::DataType >*
      mutable_arguments();
  
  // @@protoc_insertion_point(class_scope:reef.ReturnData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::reef::DataType > arguments_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static ReturnData* default_instance_;
};
// -------------------------------------------------------------------

class VirtualAddress : public ::google::protobuf::Message {
 public:
  VirtualAddress();
  virtual ~VirtualAddress();
  
  VirtualAddress(const VirtualAddress& from);
  
  inline VirtualAddress& operator=(const VirtualAddress& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtualAddress& default_instance();
  
  void Swap(VirtualAddress* other);
  
  // implements Message ----------------------------------------------
  
  VirtualAddress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VirtualAddress& from);
  void MergeFrom(const VirtualAddress& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline ::google::protobuf::int32 address() const;
  inline void set_address(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:reef.VirtualAddress)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 address_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static VirtualAddress* default_instance_;
};
// -------------------------------------------------------------------

class Message_Call : public ::google::protobuf::Message {
 public:
  Message_Call();
  virtual ~Message_Call();
  
  Message_Call(const Message_Call& from);
  
  inline Message_Call& operator=(const Message_Call& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_Call& default_instance();
  
  void Swap(Message_Call* other);
  
  // implements Message ----------------------------------------------
  
  Message_Call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message_Call& from);
  void MergeFrom(const Message_Call& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool hasReturn = 1;
  inline bool has_hasreturn() const;
  inline void clear_hasreturn();
  static const int kHasReturnFieldNumber = 1;
  inline bool hasreturn() const;
  inline void set_hasreturn(bool value);
  
  // required uint32 serviceIndex = 2;
  inline bool has_serviceindex() const;
  inline void clear_serviceindex();
  static const int kServiceIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 serviceindex() const;
  inline void set_serviceindex(::google::protobuf::uint32 value);
  
  // required uint32 methodIndex = 3;
  inline bool has_methodindex() const;
  inline void clear_methodindex();
  static const int kMethodIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 methodindex() const;
  inline void set_methodindex(::google::protobuf::uint32 value);
  
  // repeated .reef.DataType arguments = 4;
  inline int arguments_size() const;
  inline void clear_arguments();
  static const int kArgumentsFieldNumber = 4;
  inline const ::reef::DataType& arguments(int index) const;
  inline ::reef::DataType* mutable_arguments(int index);
  inline ::reef::DataType* add_arguments();
  inline const ::google::protobuf::RepeatedPtrField< ::reef::DataType >&
      arguments() const;
  inline ::google::protobuf::RepeatedPtrField< ::reef::DataType >*
      mutable_arguments();
  
  // @@protoc_insertion_point(class_scope:reef.Message_Call)
 private:
  inline void set_has_hasreturn();
  inline void clear_has_hasreturn();
  inline void set_has_serviceindex();
  inline void clear_has_serviceindex();
  inline void set_has_methodindex();
  inline void clear_has_methodindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool hasreturn_;
  ::google::protobuf::uint32 serviceindex_;
  ::google::protobuf::RepeatedPtrField< ::reef::DataType > arguments_;
  ::google::protobuf::uint32 methodindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static Message_Call* default_instance_;
};
// -------------------------------------------------------------------

class Message_Field : public ::google::protobuf::Message {
 public:
  Message_Field();
  virtual ~Message_Field();
  
  Message_Field(const Message_Field& from);
  
  inline Message_Field& operator=(const Message_Field& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_Field& default_instance();
  
  void Swap(Message_Field* other);
  
  // implements Message ----------------------------------------------
  
  Message_Field* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message_Field& from);
  void MergeFrom(const Message_Field& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool isSetField = 1;
  inline bool has_issetfield() const;
  inline void clear_issetfield();
  static const int kIsSetFieldFieldNumber = 1;
  inline bool issetfield() const;
  inline void set_issetfield(bool value);
  
  // required uint32 serviceIndex = 2;
  inline bool has_serviceindex() const;
  inline void clear_serviceindex();
  static const int kServiceIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 serviceindex() const;
  inline void set_serviceindex(::google::protobuf::uint32 value);
  
  // required uint32 fieldIndex = 3;
  inline bool has_fieldindex() const;
  inline void clear_fieldindex();
  static const int kFieldIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 fieldindex() const;
  inline void set_fieldindex(::google::protobuf::uint32 value);
  
  // required .reef.DataType value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::reef::DataType& value() const;
  inline ::reef::DataType* mutable_value();
  inline ::reef::DataType* release_value();
  
  // @@protoc_insertion_point(class_scope:reef.Message_Field)
 private:
  inline void set_has_issetfield();
  inline void clear_has_issetfield();
  inline void set_has_serviceindex();
  inline void clear_has_serviceindex();
  inline void set_has_fieldindex();
  inline void clear_has_fieldindex();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool issetfield_;
  ::google::protobuf::uint32 serviceindex_;
  ::reef::DataType* value_;
  ::google::protobuf::uint32 fieldindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static Message_Field* default_instance_;
};
// -------------------------------------------------------------------

class Message_New : public ::google::protobuf::Message {
 public:
  Message_New();
  virtual ~Message_New();
  
  Message_New(const Message_New& from);
  
  inline Message_New& operator=(const Message_New& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_New& default_instance();
  
  void Swap(Message_New* other);
  
  // implements Message ----------------------------------------------
  
  Message_New* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message_New& from);
  void MergeFrom(const Message_New& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string componentTypeName = 1;
  inline bool has_componenttypename() const;
  inline void clear_componenttypename();
  static const int kComponentTypeNameFieldNumber = 1;
  inline const ::std::string& componenttypename() const;
  inline void set_componenttypename(const ::std::string& value);
  inline void set_componenttypename(const char* value);
  inline void set_componenttypename(const char* value, size_t size);
  inline ::std::string* mutable_componenttypename();
  inline ::std::string* release_componenttypename();
  
  // @@protoc_insertion_point(class_scope:reef.Message_New)
 private:
  inline void set_has_componenttypename();
  inline void clear_has_componenttypename();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* componenttypename_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static Message_New* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();
  
  Message(const Message& from);
  
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();
  
  void Swap(Message* other);
  
  // implements Message ----------------------------------------------
  
  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Message_Type Type;
  static const Type TYPE_NEW = Message_Type_TYPE_NEW;
  static const Type TYPE_FIELD = Message_Type_TYPE_FIELD;
  static const Type TYPE_CALL = Message_Type_TYPE_CALL;
  static inline bool Type_IsValid(int value) {
    return Message_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Message_Type_Type_MIN;
  static const Type Type_MAX =
    Message_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Message_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Message_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Message_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Message_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .reef.Message.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::reef::Message_Type type() const;
  inline void set_type(::reef::Message_Type value);
  
  // required uint32 destination = 2;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 2;
  inline ::google::protobuf::uint32 destination() const;
  inline void set_destination(::google::protobuf::uint32 value);
  
  // optional .reef.Message_New msgNew = 3;
  inline bool has_msgnew() const;
  inline void clear_msgnew();
  static const int kMsgNewFieldNumber = 3;
  inline const ::reef::Message_New& msgnew() const;
  inline ::reef::Message_New* mutable_msgnew();
  inline ::reef::Message_New* release_msgnew();
  
  // optional .reef.Message_Field msgField = 4;
  inline bool has_msgfield() const;
  inline void clear_msgfield();
  static const int kMsgFieldFieldNumber = 4;
  inline const ::reef::Message_Field& msgfield() const;
  inline ::reef::Message_Field* mutable_msgfield();
  inline ::reef::Message_Field* release_msgfield();
  
  // optional .reef.Message_Call msgCall = 5;
  inline bool has_msgcall() const;
  inline void clear_msgcall();
  static const int kMsgCallFieldNumber = 5;
  inline const ::reef::Message_Call& msgcall() const;
  inline ::reef::Message_Call* mutable_msgcall();
  inline ::reef::Message_Call* release_msgcall();
  
  // @@protoc_insertion_point(class_scope:reef.Message)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_destination();
  inline void clear_has_destination();
  inline void set_has_msgnew();
  inline void clear_has_msgnew();
  inline void set_has_msgfield();
  inline void clear_has_msgfield();
  inline void set_has_msgcall();
  inline void clear_has_msgcall();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  ::google::protobuf::uint32 destination_;
  ::reef::Message_New* msgnew_;
  ::reef::Message_Field* msgfield_;
  ::reef::Message_Call* msgcall_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();
  
  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

// DataType

// required int32 dummy = 1;
inline bool DataType::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataType::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataType::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataType::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 DataType::dummy() const {
  return dummy_;
}
inline void DataType::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// ReturnData

// repeated .reef.DataType arguments = 1;
inline int ReturnData::arguments_size() const {
  return arguments_.size();
}
inline void ReturnData::clear_arguments() {
  arguments_.Clear();
}
inline const ::reef::DataType& ReturnData::arguments(int index) const {
  return arguments_.Get(index);
}
inline ::reef::DataType* ReturnData::mutable_arguments(int index) {
  return arguments_.Mutable(index);
}
inline ::reef::DataType* ReturnData::add_arguments() {
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::reef::DataType >&
ReturnData::arguments() const {
  return arguments_;
}
inline ::google::protobuf::RepeatedPtrField< ::reef::DataType >*
ReturnData::mutable_arguments() {
  return &arguments_;
}

// -------------------------------------------------------------------

// VirtualAddress

// required int32 address = 1;
inline bool VirtualAddress::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VirtualAddress::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VirtualAddress::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VirtualAddress::clear_address() {
  address_ = 0;
  clear_has_address();
}
inline ::google::protobuf::int32 VirtualAddress::address() const {
  return address_;
}
inline void VirtualAddress::set_address(::google::protobuf::int32 value) {
  set_has_address();
  address_ = value;
}

// -------------------------------------------------------------------

// Message_Call

// required bool hasReturn = 1;
inline bool Message_Call::has_hasreturn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message_Call::set_has_hasreturn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message_Call::clear_has_hasreturn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message_Call::clear_hasreturn() {
  hasreturn_ = false;
  clear_has_hasreturn();
}
inline bool Message_Call::hasreturn() const {
  return hasreturn_;
}
inline void Message_Call::set_hasreturn(bool value) {
  set_has_hasreturn();
  hasreturn_ = value;
}

// required uint32 serviceIndex = 2;
inline bool Message_Call::has_serviceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message_Call::set_has_serviceindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message_Call::clear_has_serviceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message_Call::clear_serviceindex() {
  serviceindex_ = 0u;
  clear_has_serviceindex();
}
inline ::google::protobuf::uint32 Message_Call::serviceindex() const {
  return serviceindex_;
}
inline void Message_Call::set_serviceindex(::google::protobuf::uint32 value) {
  set_has_serviceindex();
  serviceindex_ = value;
}

// required uint32 methodIndex = 3;
inline bool Message_Call::has_methodindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message_Call::set_has_methodindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message_Call::clear_has_methodindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message_Call::clear_methodindex() {
  methodindex_ = 0u;
  clear_has_methodindex();
}
inline ::google::protobuf::uint32 Message_Call::methodindex() const {
  return methodindex_;
}
inline void Message_Call::set_methodindex(::google::protobuf::uint32 value) {
  set_has_methodindex();
  methodindex_ = value;
}

// repeated .reef.DataType arguments = 4;
inline int Message_Call::arguments_size() const {
  return arguments_.size();
}
inline void Message_Call::clear_arguments() {
  arguments_.Clear();
}
inline const ::reef::DataType& Message_Call::arguments(int index) const {
  return arguments_.Get(index);
}
inline ::reef::DataType* Message_Call::mutable_arguments(int index) {
  return arguments_.Mutable(index);
}
inline ::reef::DataType* Message_Call::add_arguments() {
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::reef::DataType >&
Message_Call::arguments() const {
  return arguments_;
}
inline ::google::protobuf::RepeatedPtrField< ::reef::DataType >*
Message_Call::mutable_arguments() {
  return &arguments_;
}

// -------------------------------------------------------------------

// Message_Field

// required bool isSetField = 1;
inline bool Message_Field::has_issetfield() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message_Field::set_has_issetfield() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message_Field::clear_has_issetfield() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message_Field::clear_issetfield() {
  issetfield_ = false;
  clear_has_issetfield();
}
inline bool Message_Field::issetfield() const {
  return issetfield_;
}
inline void Message_Field::set_issetfield(bool value) {
  set_has_issetfield();
  issetfield_ = value;
}

// required uint32 serviceIndex = 2;
inline bool Message_Field::has_serviceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message_Field::set_has_serviceindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message_Field::clear_has_serviceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message_Field::clear_serviceindex() {
  serviceindex_ = 0u;
  clear_has_serviceindex();
}
inline ::google::protobuf::uint32 Message_Field::serviceindex() const {
  return serviceindex_;
}
inline void Message_Field::set_serviceindex(::google::protobuf::uint32 value) {
  set_has_serviceindex();
  serviceindex_ = value;
}

// required uint32 fieldIndex = 3;
inline bool Message_Field::has_fieldindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message_Field::set_has_fieldindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message_Field::clear_has_fieldindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message_Field::clear_fieldindex() {
  fieldindex_ = 0u;
  clear_has_fieldindex();
}
inline ::google::protobuf::uint32 Message_Field::fieldindex() const {
  return fieldindex_;
}
inline void Message_Field::set_fieldindex(::google::protobuf::uint32 value) {
  set_has_fieldindex();
  fieldindex_ = value;
}

// required .reef.DataType value = 4;
inline bool Message_Field::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message_Field::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message_Field::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message_Field::clear_value() {
  if (value_ != NULL) value_->::reef::DataType::Clear();
  clear_has_value();
}
inline const ::reef::DataType& Message_Field::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::reef::DataType* Message_Field::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::reef::DataType;
  return value_;
}
inline ::reef::DataType* Message_Field::release_value() {
  clear_has_value();
  ::reef::DataType* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// Message_New

// required string componentTypeName = 1;
inline bool Message_New::has_componenttypename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message_New::set_has_componenttypename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message_New::clear_has_componenttypename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message_New::clear_componenttypename() {
  if (componenttypename_ != &::google::protobuf::internal::kEmptyString) {
    componenttypename_->clear();
  }
  clear_has_componenttypename();
}
inline const ::std::string& Message_New::componenttypename() const {
  return *componenttypename_;
}
inline void Message_New::set_componenttypename(const ::std::string& value) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(value);
}
inline void Message_New::set_componenttypename(const char* value) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(value);
}
inline void Message_New::set_componenttypename(const char* value, size_t size) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Message_New::mutable_componenttypename() {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  return componenttypename_;
}
inline ::std::string* Message_New::release_componenttypename() {
  clear_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = componenttypename_;
    componenttypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Message

// required .reef.Message.Type type = 1;
inline bool Message::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::reef::Message_Type Message::type() const {
  return static_cast< ::reef::Message_Type >(type_);
}
inline void Message::set_type(::reef::Message_Type value) {
  GOOGLE_DCHECK(::reef::Message_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 destination = 2;
inline bool Message::has_destination() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_destination() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_destination() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_destination() {
  destination_ = 0u;
  clear_has_destination();
}
inline ::google::protobuf::uint32 Message::destination() const {
  return destination_;
}
inline void Message::set_destination(::google::protobuf::uint32 value) {
  set_has_destination();
  destination_ = value;
}

// optional .reef.Message_New msgNew = 3;
inline bool Message::has_msgnew() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_msgnew() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_msgnew() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_msgnew() {
  if (msgnew_ != NULL) msgnew_->::reef::Message_New::Clear();
  clear_has_msgnew();
}
inline const ::reef::Message_New& Message::msgnew() const {
  return msgnew_ != NULL ? *msgnew_ : *default_instance_->msgnew_;
}
inline ::reef::Message_New* Message::mutable_msgnew() {
  set_has_msgnew();
  if (msgnew_ == NULL) msgnew_ = new ::reef::Message_New;
  return msgnew_;
}
inline ::reef::Message_New* Message::release_msgnew() {
  clear_has_msgnew();
  ::reef::Message_New* temp = msgnew_;
  msgnew_ = NULL;
  return temp;
}

// optional .reef.Message_Field msgField = 4;
inline bool Message::has_msgfield() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_msgfield() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_msgfield() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_msgfield() {
  if (msgfield_ != NULL) msgfield_->::reef::Message_Field::Clear();
  clear_has_msgfield();
}
inline const ::reef::Message_Field& Message::msgfield() const {
  return msgfield_ != NULL ? *msgfield_ : *default_instance_->msgfield_;
}
inline ::reef::Message_Field* Message::mutable_msgfield() {
  set_has_msgfield();
  if (msgfield_ == NULL) msgfield_ = new ::reef::Message_Field;
  return msgfield_;
}
inline ::reef::Message_Field* Message::release_msgfield() {
  clear_has_msgfield();
  ::reef::Message_Field* temp = msgfield_;
  msgfield_ = NULL;
  return temp;
}

// optional .reef.Message_Call msgCall = 5;
inline bool Message::has_msgcall() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_msgcall() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_msgcall() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_msgcall() {
  if (msgcall_ != NULL) msgcall_->::reef::Message_Call::Clear();
  clear_has_msgcall();
}
inline const ::reef::Message_Call& Message::msgcall() const {
  return msgcall_ != NULL ? *msgcall_ : *default_instance_->msgcall_;
}
inline ::reef::Message_Call* Message::mutable_msgcall() {
  set_has_msgcall();
  if (msgcall_ == NULL) msgcall_ = new ::reef::Message_Call;
  return msgcall_;
}
inline ::reef::Message_Call* Message::release_msgcall() {
  clear_has_msgcall();
  ::reef::Message_Call* temp = msgcall_;
  msgcall_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace reef

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::reef::Message_Type>() {
  return ::reef::Message_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto__INCLUDED
