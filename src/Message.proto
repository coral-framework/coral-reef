package reef;

// Data types (information transfer):
message Data_Container
{
	optional bool boolean = 1;
	optional string str = 2;
	optional double numeric = 3;
	optional Ref_Type ref_type = 4;
}

message Argument
{
	repeated Data_Container data = 1;
}

message Ref_Type
{
	enum Owner
	{
		OWNER_LOCAL = 0;
		OWNER_RECEIVER = 1;
		OWNER_ANOTHER = 2;
	}
	required Owner owner = 1;
	required uint32 instance_id = 2;
	required uint32 facet_idx = 3;
	optional string owner_ip = 4;
}

// Commands (triggers actions into destination nodes)
message Message_Member
{
	required uint32 facet_idx = 1;
	required uint32 member_idx = 2;
	repeated Argument arguments = 4;
}

message Message_New
{
	required string component_type_name = 1;
}

message Message 
{
	required uint32 instance_id = 1;
	
	required bool has_return = 2;
	
	// If instance_id == 0 it is a New instance msg, 
	optional Message_New msg_new = 3;
	
	// If instance_id != 0 then it is a call msg
	optional Message_Member msg_member = 4;
}

