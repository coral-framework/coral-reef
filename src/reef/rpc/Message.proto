package reef.rpc;

// Data types (information transfer):
message Data_Container
{
	optional bool boolean = 1;
	optional string str = 2;
	optional double numeric = 3;
	optional Ref_Type ref_type = 4;
}

message Argument
{
	repeated Data_Container data = 1;
	optional uint32 coany_type = 2; // If the argument is an any, then this is its internal type 
}

message Ref_Type
{
	enum Owner
	{
		OWNER_LOCAL = 0;
		OWNER_RECEIVER = 1;
		OWNER_ANOTHER = 2;
	}
	required Owner owner = 1;
	required uint32 instance_id = 2;
	required uint32 facet_idx = 3;
	optional string instance_type = 4;
	optional string owner_ip = 5;
}

// Commands (triggers actions into destination nodes)
message Message_Member
{
	required uint32 facet_idx = 1;
	required uint32 member_idx = 2;
	required int32 type_depth = 3;
	repeated Argument arguments = 4;
}

message Message_New_Inst
{
	required string new_instance_type = 1;
}

message Message_Find_Inst
{
	required string key = 1;
}

message Message_Acc_Inst
{
	required bool increment = 1;
	required uint32 instance_id = 2;
}

message Message 
{
	enum Type
	{
		MSG_NEW_INST = 0;
		MSG_ACCESS_INST = 1;
		MSG_FIND_INST = 2;
		MSG_CALL = 3;
	}
	
	required Type msg_type = 1;
	
	required uint32 instance_id = 2;
	
	required bool has_return = 3;
	 
	optional string referer_ip = 4;
	
	optional Message_New_Inst msg_new_inst = 5;
	
	optional Message_Acc_Inst msg_acc_inst = 6;
	
	optional Message_Find_Inst msg_find_inst = 7;
		
	optional Message_Member msg_member = 8;
}

