// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Event.proto

#ifndef PROTOBUF_Event_2eproto__INCLUDED
#define PROTOBUF_Event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Event_2eproto();
void protobuf_AssignDesc_Event_2eproto();
void protobuf_ShutdownFile_Event_2eproto();

class DataArgument;
class CallEvent;
class FieldEvent;
class ReturnEvent;
class CreateEvent;
class CreateResult;
class Event;

enum Event_EventType {
  Event_EventType_TYPE_CREATE = 0,
  Event_EventType_TYPE_CREATE_RESULT = 1,
  Event_EventType_TYPE_CALL = 2,
  Event_EventType_TYPE_CALL_RETURN = 3,
  Event_EventType_TYPE_FIELD = 4
};
bool Event_EventType_IsValid(int value);
const Event_EventType Event_EventType_EventType_MIN = Event_EventType_TYPE_CREATE;
const Event_EventType Event_EventType_EventType_MAX = Event_EventType_TYPE_FIELD;
const int Event_EventType_EventType_ARRAYSIZE = Event_EventType_EventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Event_EventType_descriptor();
inline const ::std::string& Event_EventType_Name(Event_EventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Event_EventType_descriptor(), value);
}
inline bool Event_EventType_Parse(
    const ::std::string& name, Event_EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Event_EventType>(
    Event_EventType_descriptor(), name, value);
}
// ===================================================================

class DataArgument : public ::google::protobuf::Message {
 public:
  DataArgument();
  virtual ~DataArgument();
  
  DataArgument(const DataArgument& from);
  
  inline DataArgument& operator=(const DataArgument& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataArgument& default_instance();
  
  void Swap(DataArgument* other);
  
  // implements Message ----------------------------------------------
  
  DataArgument* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataArgument& from);
  void MergeFrom(const DataArgument& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:DataArgument)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 dummy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static DataArgument* default_instance_;
};
// -------------------------------------------------------------------

class CallEvent : public ::google::protobuf::Message {
 public:
  CallEvent();
  virtual ~CallEvent();
  
  CallEvent(const CallEvent& from);
  
  inline CallEvent& operator=(const CallEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CallEvent& default_instance();
  
  void Swap(CallEvent* other);
  
  // implements Message ----------------------------------------------
  
  CallEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallEvent& from);
  void MergeFrom(const CallEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool hasReturn = 1;
  inline bool has_hasreturn() const;
  inline void clear_hasreturn();
  static const int kHasReturnFieldNumber = 1;
  inline bool hasreturn() const;
  inline void set_hasreturn(bool value);
  
  // required uint32 serviceIndex = 2;
  inline bool has_serviceindex() const;
  inline void clear_serviceindex();
  static const int kServiceIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 serviceindex() const;
  inline void set_serviceindex(::google::protobuf::uint32 value);
  
  // required uint32 methodIndex = 3;
  inline bool has_methodindex() const;
  inline void clear_methodindex();
  static const int kMethodIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 methodindex() const;
  inline void set_methodindex(::google::protobuf::uint32 value);
  
  // repeated .DataArgument arguments = 4;
  inline int arguments_size() const;
  inline void clear_arguments();
  static const int kArgumentsFieldNumber = 4;
  inline const ::DataArgument& arguments(int index) const;
  inline ::DataArgument* mutable_arguments(int index);
  inline ::DataArgument* add_arguments();
  inline const ::google::protobuf::RepeatedPtrField< ::DataArgument >&
      arguments() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataArgument >*
      mutable_arguments();
  
  // @@protoc_insertion_point(class_scope:CallEvent)
 private:
  inline void set_has_hasreturn();
  inline void clear_has_hasreturn();
  inline void set_has_serviceindex();
  inline void clear_has_serviceindex();
  inline void set_has_methodindex();
  inline void clear_has_methodindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool hasreturn_;
  ::google::protobuf::uint32 serviceindex_;
  ::google::protobuf::RepeatedPtrField< ::DataArgument > arguments_;
  ::google::protobuf::uint32 methodindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static CallEvent* default_instance_;
};
// -------------------------------------------------------------------

class FieldEvent : public ::google::protobuf::Message {
 public:
  FieldEvent();
  virtual ~FieldEvent();
  
  FieldEvent(const FieldEvent& from);
  
  inline FieldEvent& operator=(const FieldEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldEvent& default_instance();
  
  void Swap(FieldEvent* other);
  
  // implements Message ----------------------------------------------
  
  FieldEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldEvent& from);
  void MergeFrom(const FieldEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool isSetField = 1;
  inline bool has_issetfield() const;
  inline void clear_issetfield();
  static const int kIsSetFieldFieldNumber = 1;
  inline bool issetfield() const;
  inline void set_issetfield(bool value);
  
  // required uint32 serviceIndex = 2;
  inline bool has_serviceindex() const;
  inline void clear_serviceindex();
  static const int kServiceIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 serviceindex() const;
  inline void set_serviceindex(::google::protobuf::uint32 value);
  
  // required uint32 fieldIndex = 3;
  inline bool has_fieldindex() const;
  inline void clear_fieldindex();
  static const int kFieldIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 fieldindex() const;
  inline void set_fieldindex(::google::protobuf::uint32 value);
  
  // required .DataArgument value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::DataArgument& value() const;
  inline ::DataArgument* mutable_value();
  inline ::DataArgument* release_value();
  
  // @@protoc_insertion_point(class_scope:FieldEvent)
 private:
  inline void set_has_issetfield();
  inline void clear_has_issetfield();
  inline void set_has_serviceindex();
  inline void clear_has_serviceindex();
  inline void set_has_fieldindex();
  inline void clear_has_fieldindex();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool issetfield_;
  ::google::protobuf::uint32 serviceindex_;
  ::DataArgument* value_;
  ::google::protobuf::uint32 fieldindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static FieldEvent* default_instance_;
};
// -------------------------------------------------------------------

class ReturnEvent : public ::google::protobuf::Message {
 public:
  ReturnEvent();
  virtual ~ReturnEvent();
  
  ReturnEvent(const ReturnEvent& from);
  
  inline ReturnEvent& operator=(const ReturnEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnEvent& default_instance();
  
  void Swap(ReturnEvent* other);
  
  // implements Message ----------------------------------------------
  
  ReturnEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnEvent& from);
  void MergeFrom(const ReturnEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DataArgument arguments = 1;
  inline int arguments_size() const;
  inline void clear_arguments();
  static const int kArgumentsFieldNumber = 1;
  inline const ::DataArgument& arguments(int index) const;
  inline ::DataArgument* mutable_arguments(int index);
  inline ::DataArgument* add_arguments();
  inline const ::google::protobuf::RepeatedPtrField< ::DataArgument >&
      arguments() const;
  inline ::google::protobuf::RepeatedPtrField< ::DataArgument >*
      mutable_arguments();
  
  // @@protoc_insertion_point(class_scope:ReturnEvent)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DataArgument > arguments_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static ReturnEvent* default_instance_;
};
// -------------------------------------------------------------------

class CreateEvent : public ::google::protobuf::Message {
 public:
  CreateEvent();
  virtual ~CreateEvent();
  
  CreateEvent(const CreateEvent& from);
  
  inline CreateEvent& operator=(const CreateEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEvent& default_instance();
  
  void Swap(CreateEvent* other);
  
  // implements Message ----------------------------------------------
  
  CreateEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateEvent& from);
  void MergeFrom(const CreateEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string componentTypeName = 1;
  inline bool has_componenttypename() const;
  inline void clear_componenttypename();
  static const int kComponentTypeNameFieldNumber = 1;
  inline const ::std::string& componenttypename() const;
  inline void set_componenttypename(const ::std::string& value);
  inline void set_componenttypename(const char* value);
  inline void set_componenttypename(const char* value, size_t size);
  inline ::std::string* mutable_componenttypename();
  inline ::std::string* release_componenttypename();
  
  // @@protoc_insertion_point(class_scope:CreateEvent)
 private:
  inline void set_has_componenttypename();
  inline void clear_has_componenttypename();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* componenttypename_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static CreateEvent* default_instance_;
};
// -------------------------------------------------------------------

class CreateResult : public ::google::protobuf::Message {
 public:
  CreateResult();
  virtual ~CreateResult();
  
  CreateResult(const CreateResult& from);
  
  inline CreateResult& operator=(const CreateResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateResult& default_instance();
  
  void Swap(CreateResult* other);
  
  // implements Message ----------------------------------------------
  
  CreateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateResult& from);
  void MergeFrom(const CreateResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 virtualAddress = 1;
  inline bool has_virtualaddress() const;
  inline void clear_virtualaddress();
  static const int kVirtualAddressFieldNumber = 1;
  inline ::google::protobuf::int32 virtualaddress() const;
  inline void set_virtualaddress(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CreateResult)
 private:
  inline void set_has_virtualaddress();
  inline void clear_has_virtualaddress();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 virtualaddress_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static CreateResult* default_instance_;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message {
 public:
  Event();
  virtual ~Event();
  
  Event(const Event& from);
  
  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();
  
  void Swap(Event* other);
  
  // implements Message ----------------------------------------------
  
  Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Event_EventType EventType;
  static const EventType TYPE_CREATE = Event_EventType_TYPE_CREATE;
  static const EventType TYPE_CREATE_RESULT = Event_EventType_TYPE_CREATE_RESULT;
  static const EventType TYPE_CALL = Event_EventType_TYPE_CALL;
  static const EventType TYPE_CALL_RETURN = Event_EventType_TYPE_CALL_RETURN;
  static const EventType TYPE_FIELD = Event_EventType_TYPE_FIELD;
  static inline bool EventType_IsValid(int value) {
    return Event_EventType_IsValid(value);
  }
  static const EventType EventType_MIN =
    Event_EventType_EventType_MIN;
  static const EventType EventType_MAX =
    Event_EventType_EventType_MAX;
  static const int EventType_ARRAYSIZE =
    Event_EventType_EventType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EventType_descriptor() {
    return Event_EventType_descriptor();
  }
  static inline const ::std::string& EventType_Name(EventType value) {
    return Event_EventType_Name(value);
  }
  static inline bool EventType_Parse(const ::std::string& name,
      EventType* value) {
    return Event_EventType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 eventType = 1;
  inline bool has_eventtype() const;
  inline void clear_eventtype();
  static const int kEventTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 eventtype() const;
  inline void set_eventtype(::google::protobuf::uint32 value);
  
  // required uint32 destination = 2;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 2;
  inline ::google::protobuf::uint32 destination() const;
  inline void set_destination(::google::protobuf::uint32 value);
  
  // optional .CreateEvent createEvent = 3;
  inline bool has_createevent() const;
  inline void clear_createevent();
  static const int kCreateEventFieldNumber = 3;
  inline const ::CreateEvent& createevent() const;
  inline ::CreateEvent* mutable_createevent();
  inline ::CreateEvent* release_createevent();
  
  // optional .CreateResult createResult = 4;
  inline bool has_createresult() const;
  inline void clear_createresult();
  static const int kCreateResultFieldNumber = 4;
  inline const ::CreateResult& createresult() const;
  inline ::CreateResult* mutable_createresult();
  inline ::CreateResult* release_createresult();
  
  // optional .CallEvent callEvent = 5;
  inline bool has_callevent() const;
  inline void clear_callevent();
  static const int kCallEventFieldNumber = 5;
  inline const ::CallEvent& callevent() const;
  inline ::CallEvent* mutable_callevent();
  inline ::CallEvent* release_callevent();
  
  // optional .ReturnEvent callReturn = 6;
  inline bool has_callreturn() const;
  inline void clear_callreturn();
  static const int kCallReturnFieldNumber = 6;
  inline const ::ReturnEvent& callreturn() const;
  inline ::ReturnEvent* mutable_callreturn();
  inline ::ReturnEvent* release_callreturn();
  
  // optional .FieldEvent fieldEvent = 7;
  inline bool has_fieldevent() const;
  inline void clear_fieldevent();
  static const int kFieldEventFieldNumber = 7;
  inline const ::FieldEvent& fieldevent() const;
  inline ::FieldEvent* mutable_fieldevent();
  inline ::FieldEvent* release_fieldevent();
  
  // @@protoc_insertion_point(class_scope:Event)
 private:
  inline void set_has_eventtype();
  inline void clear_has_eventtype();
  inline void set_has_destination();
  inline void clear_has_destination();
  inline void set_has_createevent();
  inline void clear_has_createevent();
  inline void set_has_createresult();
  inline void clear_has_createresult();
  inline void set_has_callevent();
  inline void clear_has_callevent();
  inline void set_has_callreturn();
  inline void clear_has_callreturn();
  inline void set_has_fieldevent();
  inline void clear_has_fieldevent();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 eventtype_;
  ::google::protobuf::uint32 destination_;
  ::CreateEvent* createevent_;
  ::CreateResult* createresult_;
  ::CallEvent* callevent_;
  ::ReturnEvent* callreturn_;
  ::FieldEvent* fieldevent_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static Event* default_instance_;
};
// ===================================================================


// ===================================================================

// DataArgument

// required int32 dummy = 1;
inline bool DataArgument::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataArgument::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataArgument::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataArgument::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 DataArgument::dummy() const {
  return dummy_;
}
inline void DataArgument::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CallEvent

// required bool hasReturn = 1;
inline bool CallEvent::has_hasreturn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallEvent::set_has_hasreturn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallEvent::clear_has_hasreturn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallEvent::clear_hasreturn() {
  hasreturn_ = false;
  clear_has_hasreturn();
}
inline bool CallEvent::hasreturn() const {
  return hasreturn_;
}
inline void CallEvent::set_hasreturn(bool value) {
  set_has_hasreturn();
  hasreturn_ = value;
}

// required uint32 serviceIndex = 2;
inline bool CallEvent::has_serviceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallEvent::set_has_serviceindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallEvent::clear_has_serviceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallEvent::clear_serviceindex() {
  serviceindex_ = 0u;
  clear_has_serviceindex();
}
inline ::google::protobuf::uint32 CallEvent::serviceindex() const {
  return serviceindex_;
}
inline void CallEvent::set_serviceindex(::google::protobuf::uint32 value) {
  set_has_serviceindex();
  serviceindex_ = value;
}

// required uint32 methodIndex = 3;
inline bool CallEvent::has_methodindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CallEvent::set_has_methodindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CallEvent::clear_has_methodindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CallEvent::clear_methodindex() {
  methodindex_ = 0u;
  clear_has_methodindex();
}
inline ::google::protobuf::uint32 CallEvent::methodindex() const {
  return methodindex_;
}
inline void CallEvent::set_methodindex(::google::protobuf::uint32 value) {
  set_has_methodindex();
  methodindex_ = value;
}

// repeated .DataArgument arguments = 4;
inline int CallEvent::arguments_size() const {
  return arguments_.size();
}
inline void CallEvent::clear_arguments() {
  arguments_.Clear();
}
inline const ::DataArgument& CallEvent::arguments(int index) const {
  return arguments_.Get(index);
}
inline ::DataArgument* CallEvent::mutable_arguments(int index) {
  return arguments_.Mutable(index);
}
inline ::DataArgument* CallEvent::add_arguments() {
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataArgument >&
CallEvent::arguments() const {
  return arguments_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataArgument >*
CallEvent::mutable_arguments() {
  return &arguments_;
}

// -------------------------------------------------------------------

// FieldEvent

// required bool isSetField = 1;
inline bool FieldEvent::has_issetfield() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldEvent::set_has_issetfield() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldEvent::clear_has_issetfield() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldEvent::clear_issetfield() {
  issetfield_ = false;
  clear_has_issetfield();
}
inline bool FieldEvent::issetfield() const {
  return issetfield_;
}
inline void FieldEvent::set_issetfield(bool value) {
  set_has_issetfield();
  issetfield_ = value;
}

// required uint32 serviceIndex = 2;
inline bool FieldEvent::has_serviceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldEvent::set_has_serviceindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldEvent::clear_has_serviceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldEvent::clear_serviceindex() {
  serviceindex_ = 0u;
  clear_has_serviceindex();
}
inline ::google::protobuf::uint32 FieldEvent::serviceindex() const {
  return serviceindex_;
}
inline void FieldEvent::set_serviceindex(::google::protobuf::uint32 value) {
  set_has_serviceindex();
  serviceindex_ = value;
}

// required uint32 fieldIndex = 3;
inline bool FieldEvent::has_fieldindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FieldEvent::set_has_fieldindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FieldEvent::clear_has_fieldindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FieldEvent::clear_fieldindex() {
  fieldindex_ = 0u;
  clear_has_fieldindex();
}
inline ::google::protobuf::uint32 FieldEvent::fieldindex() const {
  return fieldindex_;
}
inline void FieldEvent::set_fieldindex(::google::protobuf::uint32 value) {
  set_has_fieldindex();
  fieldindex_ = value;
}

// required .DataArgument value = 4;
inline bool FieldEvent::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FieldEvent::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FieldEvent::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FieldEvent::clear_value() {
  if (value_ != NULL) value_->::DataArgument::Clear();
  clear_has_value();
}
inline const ::DataArgument& FieldEvent::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::DataArgument* FieldEvent::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::DataArgument;
  return value_;
}
inline ::DataArgument* FieldEvent::release_value() {
  clear_has_value();
  ::DataArgument* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ReturnEvent

// repeated .DataArgument arguments = 1;
inline int ReturnEvent::arguments_size() const {
  return arguments_.size();
}
inline void ReturnEvent::clear_arguments() {
  arguments_.Clear();
}
inline const ::DataArgument& ReturnEvent::arguments(int index) const {
  return arguments_.Get(index);
}
inline ::DataArgument* ReturnEvent::mutable_arguments(int index) {
  return arguments_.Mutable(index);
}
inline ::DataArgument* ReturnEvent::add_arguments() {
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataArgument >&
ReturnEvent::arguments() const {
  return arguments_;
}
inline ::google::protobuf::RepeatedPtrField< ::DataArgument >*
ReturnEvent::mutable_arguments() {
  return &arguments_;
}

// -------------------------------------------------------------------

// CreateEvent

// required string componentTypeName = 1;
inline bool CreateEvent::has_componenttypename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateEvent::set_has_componenttypename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateEvent::clear_has_componenttypename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateEvent::clear_componenttypename() {
  if (componenttypename_ != &::google::protobuf::internal::kEmptyString) {
    componenttypename_->clear();
  }
  clear_has_componenttypename();
}
inline const ::std::string& CreateEvent::componenttypename() const {
  return *componenttypename_;
}
inline void CreateEvent::set_componenttypename(const ::std::string& value) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(value);
}
inline void CreateEvent::set_componenttypename(const char* value) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(value);
}
inline void CreateEvent::set_componenttypename(const char* value, size_t size) {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  componenttypename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateEvent::mutable_componenttypename() {
  set_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    componenttypename_ = new ::std::string;
  }
  return componenttypename_;
}
inline ::std::string* CreateEvent::release_componenttypename() {
  clear_has_componenttypename();
  if (componenttypename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = componenttypename_;
    componenttypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CreateResult

// required int32 virtualAddress = 1;
inline bool CreateResult::has_virtualaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateResult::set_has_virtualaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateResult::clear_has_virtualaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateResult::clear_virtualaddress() {
  virtualaddress_ = 0;
  clear_has_virtualaddress();
}
inline ::google::protobuf::int32 CreateResult::virtualaddress() const {
  return virtualaddress_;
}
inline void CreateResult::set_virtualaddress(::google::protobuf::int32 value) {
  set_has_virtualaddress();
  virtualaddress_ = value;
}

// -------------------------------------------------------------------

// Event

// required uint32 eventType = 1;
inline bool Event::has_eventtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Event::set_has_eventtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Event::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Event::clear_eventtype() {
  eventtype_ = 0u;
  clear_has_eventtype();
}
inline ::google::protobuf::uint32 Event::eventtype() const {
  return eventtype_;
}
inline void Event::set_eventtype(::google::protobuf::uint32 value) {
  set_has_eventtype();
  eventtype_ = value;
}

// required uint32 destination = 2;
inline bool Event::has_destination() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Event::set_has_destination() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Event::clear_has_destination() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Event::clear_destination() {
  destination_ = 0u;
  clear_has_destination();
}
inline ::google::protobuf::uint32 Event::destination() const {
  return destination_;
}
inline void Event::set_destination(::google::protobuf::uint32 value) {
  set_has_destination();
  destination_ = value;
}

// optional .CreateEvent createEvent = 3;
inline bool Event::has_createevent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Event::set_has_createevent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Event::clear_has_createevent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Event::clear_createevent() {
  if (createevent_ != NULL) createevent_->::CreateEvent::Clear();
  clear_has_createevent();
}
inline const ::CreateEvent& Event::createevent() const {
  return createevent_ != NULL ? *createevent_ : *default_instance_->createevent_;
}
inline ::CreateEvent* Event::mutable_createevent() {
  set_has_createevent();
  if (createevent_ == NULL) createevent_ = new ::CreateEvent;
  return createevent_;
}
inline ::CreateEvent* Event::release_createevent() {
  clear_has_createevent();
  ::CreateEvent* temp = createevent_;
  createevent_ = NULL;
  return temp;
}

// optional .CreateResult createResult = 4;
inline bool Event::has_createresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Event::set_has_createresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Event::clear_has_createresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Event::clear_createresult() {
  if (createresult_ != NULL) createresult_->::CreateResult::Clear();
  clear_has_createresult();
}
inline const ::CreateResult& Event::createresult() const {
  return createresult_ != NULL ? *createresult_ : *default_instance_->createresult_;
}
inline ::CreateResult* Event::mutable_createresult() {
  set_has_createresult();
  if (createresult_ == NULL) createresult_ = new ::CreateResult;
  return createresult_;
}
inline ::CreateResult* Event::release_createresult() {
  clear_has_createresult();
  ::CreateResult* temp = createresult_;
  createresult_ = NULL;
  return temp;
}

// optional .CallEvent callEvent = 5;
inline bool Event::has_callevent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Event::set_has_callevent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Event::clear_has_callevent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Event::clear_callevent() {
  if (callevent_ != NULL) callevent_->::CallEvent::Clear();
  clear_has_callevent();
}
inline const ::CallEvent& Event::callevent() const {
  return callevent_ != NULL ? *callevent_ : *default_instance_->callevent_;
}
inline ::CallEvent* Event::mutable_callevent() {
  set_has_callevent();
  if (callevent_ == NULL) callevent_ = new ::CallEvent;
  return callevent_;
}
inline ::CallEvent* Event::release_callevent() {
  clear_has_callevent();
  ::CallEvent* temp = callevent_;
  callevent_ = NULL;
  return temp;
}

// optional .ReturnEvent callReturn = 6;
inline bool Event::has_callreturn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Event::set_has_callreturn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Event::clear_has_callreturn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Event::clear_callreturn() {
  if (callreturn_ != NULL) callreturn_->::ReturnEvent::Clear();
  clear_has_callreturn();
}
inline const ::ReturnEvent& Event::callreturn() const {
  return callreturn_ != NULL ? *callreturn_ : *default_instance_->callreturn_;
}
inline ::ReturnEvent* Event::mutable_callreturn() {
  set_has_callreturn();
  if (callreturn_ == NULL) callreturn_ = new ::ReturnEvent;
  return callreturn_;
}
inline ::ReturnEvent* Event::release_callreturn() {
  clear_has_callreturn();
  ::ReturnEvent* temp = callreturn_;
  callreturn_ = NULL;
  return temp;
}

// optional .FieldEvent fieldEvent = 7;
inline bool Event::has_fieldevent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Event::set_has_fieldevent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Event::clear_has_fieldevent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Event::clear_fieldevent() {
  if (fieldevent_ != NULL) fieldevent_->::FieldEvent::Clear();
  clear_has_fieldevent();
}
inline const ::FieldEvent& Event::fieldevent() const {
  return fieldevent_ != NULL ? *fieldevent_ : *default_instance_->fieldevent_;
}
inline ::FieldEvent* Event::mutable_fieldevent() {
  set_has_fieldevent();
  if (fieldevent_ == NULL) fieldevent_ = new ::FieldEvent;
  return fieldevent_;
}
inline ::FieldEvent* Event::release_fieldevent() {
  clear_has_fieldevent();
  ::FieldEvent* temp = fieldevent_;
  fieldevent_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Event_EventType>() {
  return ::Event_EventType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Event_2eproto__INCLUDED
