// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace reef {

namespace {

const ::google::protobuf::Descriptor* DataContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataContainer_reflection_ = NULL;
const ::google::protobuf::Descriptor* Argument_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Argument_reflection_ = NULL;
const ::google::protobuf::Descriptor* VirtualAddress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VirtualAddress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_Call_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_Call_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_Field_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_Field_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_New_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_New_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_Return_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_Return_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Message_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_2eproto() {
  protobuf_AddDesc_Message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message.proto");
  GOOGLE_CHECK(file != NULL);
  DataContainer_descriptor_ = file->message_type(0);
  static const int DataContainer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataContainer, boolean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataContainer, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataContainer, numeric_),
  };
  DataContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataContainer_descriptor_,
      DataContainer::default_instance_,
      DataContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataContainer));
  Argument_descriptor_ = file->message_type(1);
  static const int Argument_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, data_),
  };
  Argument_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Argument_descriptor_,
      Argument::default_instance_,
      Argument_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Argument, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Argument));
  VirtualAddress_descriptor_ = file->message_type(2);
  static const int VirtualAddress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VirtualAddress, address_),
  };
  VirtualAddress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VirtualAddress_descriptor_,
      VirtualAddress::default_instance_,
      VirtualAddress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VirtualAddress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VirtualAddress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VirtualAddress));
  Message_Call_descriptor_ = file->message_type(3);
  static const int Message_Call_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, hasreturn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, serviceindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, memberindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, arguments_),
  };
  Message_Call_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_Call_descriptor_,
      Message_Call::default_instance_,
      Message_Call_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Call, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_Call));
  Message_Field_descriptor_ = file->message_type(4);
  static const int Message_Field_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, issetfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, serviceindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, fieldindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, value_),
  };
  Message_Field_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_Field_descriptor_,
      Message_Field::default_instance_,
      Message_Field_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Field, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_Field));
  Message_New_descriptor_ = file->message_type(5);
  static const int Message_New_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_New, componenttypename_),
  };
  Message_New_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_New_descriptor_,
      Message_New::default_instance_,
      Message_New_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_New, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_New, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_New));
  Message_Return_descriptor_ = file->message_type(6);
  static const int Message_Return_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Return, returnvalue_),
  };
  Message_Return_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_Return_descriptor_,
      Message_Return::default_instance_,
      Message_Return_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Return, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Return, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_Return));
  Message_descriptor_ = file->message_type(7);
  static const int Message_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msgnew_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msgfield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msgcall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msgreturn_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
  Message_Type_descriptor_ = Message_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataContainer_descriptor_, &DataContainer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Argument_descriptor_, &Argument::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VirtualAddress_descriptor_, &VirtualAddress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_Call_descriptor_, &Message_Call::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_Field_descriptor_, &Message_Field::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_New_descriptor_, &Message_New::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_Return_descriptor_, &Message_Return::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_2eproto() {
  delete DataContainer::default_instance_;
  delete DataContainer_reflection_;
  delete Argument::default_instance_;
  delete Argument_reflection_;
  delete VirtualAddress::default_instance_;
  delete VirtualAddress_reflection_;
  delete Message_Call::default_instance_;
  delete Message_Call_reflection_;
  delete Message_Field::default_instance_;
  delete Message_Field_reflection_;
  delete Message_New::default_instance_;
  delete Message_New_reflection_;
  delete Message_Return::default_instance_;
  delete Message_Return_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
}

void protobuf_AddDesc_Message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMessage.proto\022\004reef\">\n\rDataContainer\022\017"
    "\n\007boolean\030\001 \001(\010\022\013\n\003str\030\002 \001(\t\022\017\n\007numeric\030"
    "\003 \001(\001\"-\n\010Argument\022!\n\004data\030\001 \003(\0132\023.reef.D"
    "ataContainer\"!\n\016VirtualAddress\022\017\n\007addres"
    "s\030\001 \002(\005\"o\n\014Message_Call\022\021\n\thasReturn\030\001 \002"
    "(\010\022\024\n\014serviceIndex\030\002 \002(\r\022\023\n\013memberIndex\030"
    "\003 \002(\r\022!\n\targuments\030\004 \003(\0132\016.reef.Argument"
    "\"l\n\rMessage_Field\022\022\n\nisSetField\030\001 \002(\010\022\024\n"
    "\014serviceIndex\030\002 \002(\r\022\022\n\nfieldIndex\030\003 \002(\r\022"
    "\035\n\005value\030\004 \002(\0132\016.reef.Argument\"(\n\013Messag"
    "e_New\022\031\n\021componentTypeName\030\001 \002(\t\"5\n\016Mess"
    "age_Return\022#\n\013returnValue\030\001 \002(\0132\016.reef.A"
    "rgument\"\256\002\n\007Message\022 \n\004type\030\001 \002(\0162\022.reef"
    ".Message.Type\022\023\n\013destination\030\002 \002(\r\022!\n\006ms"
    "gNew\030\003 \001(\0132\021.reef.Message_New\022%\n\010msgFiel"
    "d\030\004 \001(\0132\023.reef.Message_Field\022#\n\007msgCall\030"
    "\005 \001(\0132\022.reef.Message_Call\022\'\n\tmsgReturn\030\006"
    " \001(\0132\024.reef.Message_Return\"T\n\004Type\022\014\n\010TY"
    "PE_NEW\020\000\022\016\n\nTYPE_FIELD\020\001\022\r\n\tTYPE_CALL\020\002\022"
    "\017\n\013TYPE_RETURN\020\003\022\016\n\nTYPE_OTHER\020\004", 792);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  DataContainer::default_instance_ = new DataContainer();
  Argument::default_instance_ = new Argument();
  VirtualAddress::default_instance_ = new VirtualAddress();
  Message_Call::default_instance_ = new Message_Call();
  Message_Field::default_instance_ = new Message_Field();
  Message_New::default_instance_ = new Message_New();
  Message_Return::default_instance_ = new Message_Return();
  Message::default_instance_ = new Message();
  DataContainer::default_instance_->InitAsDefaultInstance();
  Argument::default_instance_->InitAsDefaultInstance();
  VirtualAddress::default_instance_->InitAsDefaultInstance();
  Message_Call::default_instance_->InitAsDefaultInstance();
  Message_Field::default_instance_->InitAsDefaultInstance();
  Message_New::default_instance_->InitAsDefaultInstance();
  Message_Return::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_2eproto {
  StaticDescriptorInitializer_Message_2eproto() {
    protobuf_AddDesc_Message_2eproto();
  }
} static_descriptor_initializer_Message_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int DataContainer::kBooleanFieldNumber;
const int DataContainer::kStrFieldNumber;
const int DataContainer::kNumericFieldNumber;
#endif  // !_MSC_VER

DataContainer::DataContainer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataContainer::InitAsDefaultInstance() {
}

DataContainer::DataContainer(const DataContainer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataContainer::SharedCtor() {
  _cached_size_ = 0;
  boolean_ = false;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  numeric_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataContainer::~DataContainer() {
  SharedDtor();
}

void DataContainer::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void DataContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataContainer_descriptor_;
}

const DataContainer& DataContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

DataContainer* DataContainer::default_instance_ = NULL;

DataContainer* DataContainer::New() const {
  return new DataContainer;
}

void DataContainer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boolean_ = false;
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
    numeric_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool boolean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolean_)));
          set_has_boolean();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_str;
        break;
      }
      
      // optional string str = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_numeric;
        break;
      }
      
      // optional double numeric = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_numeric:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &numeric_)));
          set_has_numeric();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolean(), output);
  }
  
  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->str(), output);
  }
  
  // optional double numeric = 3;
  if (has_numeric()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->numeric(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataContainer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolean(), target);
  }
  
  // optional string str = 2;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }
  
  // optional double numeric = 3;
  if (has_numeric()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->numeric(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataContainer::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool boolean = 1;
    if (has_boolean()) {
      total_size += 1 + 1;
    }
    
    // optional string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }
    
    // optional double numeric = 3;
    if (has_numeric()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataContainer::MergeFrom(const DataContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boolean()) {
      set_boolean(from.boolean());
    }
    if (from.has_str()) {
      set_str(from.str());
    }
    if (from.has_numeric()) {
      set_numeric(from.numeric());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataContainer::CopyFrom(const DataContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataContainer::IsInitialized() const {
  
  return true;
}

void DataContainer::Swap(DataContainer* other) {
  if (other != this) {
    std::swap(boolean_, other->boolean_);
    std::swap(str_, other->str_);
    std::swap(numeric_, other->numeric_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataContainer_descriptor_;
  metadata.reflection = DataContainer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Argument::kDataFieldNumber;
#endif  // !_MSC_VER

Argument::Argument()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Argument::InitAsDefaultInstance() {
}

Argument::Argument(const Argument& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Argument::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Argument::~Argument() {
  SharedDtor();
}

void Argument::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Argument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Argument::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Argument_descriptor_;
}

const Argument& Argument::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Argument* Argument::default_instance_ = NULL;

Argument* Argument::New() const {
  return new Argument;
}

void Argument::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Argument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .reef.DataContainer data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Argument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .reef.DataContainer data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Argument::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .reef.DataContainer data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Argument::ByteSize() const {
  int total_size = 0;
  
  // repeated .reef.DataContainer data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Argument::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Argument* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Argument*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Argument::MergeFrom(const Argument& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Argument::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Argument::CopyFrom(const Argument& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Argument::IsInitialized() const {
  
  return true;
}

void Argument::Swap(Argument* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Argument::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Argument_descriptor_;
  metadata.reflection = Argument_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int VirtualAddress::kAddressFieldNumber;
#endif  // !_MSC_VER

VirtualAddress::VirtualAddress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void VirtualAddress::InitAsDefaultInstance() {
}

VirtualAddress::VirtualAddress(const VirtualAddress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void VirtualAddress::SharedCtor() {
  _cached_size_ = 0;
  address_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VirtualAddress::~VirtualAddress() {
  SharedDtor();
}

void VirtualAddress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VirtualAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VirtualAddress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VirtualAddress_descriptor_;
}

const VirtualAddress& VirtualAddress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

VirtualAddress* VirtualAddress::default_instance_ = NULL;

VirtualAddress* VirtualAddress::New() const {
  return new VirtualAddress;
}

void VirtualAddress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    address_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VirtualAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 address = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void VirtualAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 address = 1;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->address(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* VirtualAddress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 address = 1;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->address(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int VirtualAddress::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->address());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VirtualAddress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VirtualAddress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VirtualAddress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VirtualAddress::MergeFrom(const VirtualAddress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VirtualAddress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtualAddress::CopyFrom(const VirtualAddress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualAddress::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void VirtualAddress::Swap(VirtualAddress* other) {
  if (other != this) {
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VirtualAddress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VirtualAddress_descriptor_;
  metadata.reflection = VirtualAddress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message_Call::kHasReturnFieldNumber;
const int Message_Call::kServiceIndexFieldNumber;
const int Message_Call::kMemberIndexFieldNumber;
const int Message_Call::kArgumentsFieldNumber;
#endif  // !_MSC_VER

Message_Call::Message_Call()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message_Call::InitAsDefaultInstance() {
}

Message_Call::Message_Call(const Message_Call& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message_Call::SharedCtor() {
  _cached_size_ = 0;
  hasreturn_ = false;
  serviceindex_ = 0u;
  memberindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message_Call::~Message_Call() {
  SharedDtor();
}

void Message_Call::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Message_Call::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Call::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Call_descriptor_;
}

const Message_Call& Message_Call::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Message_Call* Message_Call::default_instance_ = NULL;

Message_Call* Message_Call::New() const {
  return new Message_Call;
}

void Message_Call::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hasreturn_ = false;
    serviceindex_ = 0u;
    memberindex_ = 0u;
  }
  arguments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool hasReturn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasreturn_)));
          set_has_hasreturn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_serviceIndex;
        break;
      }
      
      // required uint32 serviceIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serviceIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serviceindex_)));
          set_has_serviceindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_memberIndex;
        break;
      }
      
      // required uint32 memberIndex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_memberIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &memberindex_)));
          set_has_memberindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_arguments;
        break;
      }
      
      // repeated .reef.Argument arguments = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_arguments()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_arguments;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message_Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool hasReturn = 1;
  if (has_hasreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasreturn(), output);
  }
  
  // required uint32 serviceIndex = 2;
  if (has_serviceindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serviceindex(), output);
  }
  
  // required uint32 memberIndex = 3;
  if (has_memberindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->memberindex(), output);
  }
  
  // repeated .reef.Argument arguments = 4;
  for (int i = 0; i < this->arguments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->arguments(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message_Call::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool hasReturn = 1;
  if (has_hasreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasreturn(), target);
  }
  
  // required uint32 serviceIndex = 2;
  if (has_serviceindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serviceindex(), target);
  }
  
  // required uint32 memberIndex = 3;
  if (has_memberindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->memberindex(), target);
  }
  
  // repeated .reef.Argument arguments = 4;
  for (int i = 0; i < this->arguments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->arguments(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message_Call::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool hasReturn = 1;
    if (has_hasreturn()) {
      total_size += 1 + 1;
    }
    
    // required uint32 serviceIndex = 2;
    if (has_serviceindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->serviceindex());
    }
    
    // required uint32 memberIndex = 3;
    if (has_memberindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->memberindex());
    }
    
  }
  // repeated .reef.Argument arguments = 4;
  total_size += 1 * this->arguments_size();
  for (int i = 0; i < this->arguments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arguments(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Call::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_Call* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_Call*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_Call::MergeFrom(const Message_Call& from) {
  GOOGLE_CHECK_NE(&from, this);
  arguments_.MergeFrom(from.arguments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hasreturn()) {
      set_hasreturn(from.hasreturn());
    }
    if (from.has_serviceindex()) {
      set_serviceindex(from.serviceindex());
    }
    if (from.has_memberindex()) {
      set_memberindex(from.memberindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_Call::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Call::CopyFrom(const Message_Call& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Call::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void Message_Call::Swap(Message_Call* other) {
  if (other != this) {
    std::swap(hasreturn_, other->hasreturn_);
    std::swap(serviceindex_, other->serviceindex_);
    std::swap(memberindex_, other->memberindex_);
    arguments_.Swap(&other->arguments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_Call::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_Call_descriptor_;
  metadata.reflection = Message_Call_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message_Field::kIsSetFieldFieldNumber;
const int Message_Field::kServiceIndexFieldNumber;
const int Message_Field::kFieldIndexFieldNumber;
const int Message_Field::kValueFieldNumber;
#endif  // !_MSC_VER

Message_Field::Message_Field()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message_Field::InitAsDefaultInstance() {
  value_ = const_cast< ::reef::Argument*>(&::reef::Argument::default_instance());
}

Message_Field::Message_Field(const Message_Field& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message_Field::SharedCtor() {
  _cached_size_ = 0;
  issetfield_ = false;
  serviceindex_ = 0u;
  fieldindex_ = 0u;
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message_Field::~Message_Field() {
  SharedDtor();
}

void Message_Field::SharedDtor() {
  if (this != default_instance_) {
    delete value_;
  }
}

void Message_Field::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Field::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Field_descriptor_;
}

const Message_Field& Message_Field::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Message_Field* Message_Field::default_instance_ = NULL;

Message_Field* Message_Field::New() const {
  return new Message_Field;
}

void Message_Field::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    issetfield_ = false;
    serviceindex_ = 0u;
    fieldindex_ = 0u;
    if (has_value()) {
      if (value_ != NULL) value_->::reef::Argument::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isSetField = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issetfield_)));
          set_has_issetfield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_serviceIndex;
        break;
      }
      
      // required uint32 serviceIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serviceIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serviceindex_)));
          set_has_serviceindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fieldIndex;
        break;
      }
      
      // required uint32 fieldIndex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fieldIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fieldindex_)));
          set_has_fieldindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_value;
        break;
      }
      
      // required .reef.Argument value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message_Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool isSetField = 1;
  if (has_issetfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issetfield(), output);
  }
  
  // required uint32 serviceIndex = 2;
  if (has_serviceindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serviceindex(), output);
  }
  
  // required uint32 fieldIndex = 3;
  if (has_fieldindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fieldindex(), output);
  }
  
  // required .reef.Argument value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message_Field::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool isSetField = 1;
  if (has_issetfield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issetfield(), target);
  }
  
  // required uint32 serviceIndex = 2;
  if (has_serviceindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serviceindex(), target);
  }
  
  // required uint32 fieldIndex = 3;
  if (has_fieldindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fieldindex(), target);
  }
  
  // required .reef.Argument value = 4;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message_Field::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool isSetField = 1;
    if (has_issetfield()) {
      total_size += 1 + 1;
    }
    
    // required uint32 serviceIndex = 2;
    if (has_serviceindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->serviceindex());
    }
    
    // required uint32 fieldIndex = 3;
    if (has_fieldindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fieldindex());
    }
    
    // required .reef.Argument value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Field::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_Field* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_Field*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_Field::MergeFrom(const Message_Field& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issetfield()) {
      set_issetfield(from.issetfield());
    }
    if (from.has_serviceindex()) {
      set_serviceindex(from.serviceindex());
    }
    if (from.has_fieldindex()) {
      set_fieldindex(from.fieldindex());
    }
    if (from.has_value()) {
      mutable_value()->::reef::Argument::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_Field::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Field::CopyFrom(const Message_Field& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Field::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void Message_Field::Swap(Message_Field* other) {
  if (other != this) {
    std::swap(issetfield_, other->issetfield_);
    std::swap(serviceindex_, other->serviceindex_);
    std::swap(fieldindex_, other->fieldindex_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_Field::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_Field_descriptor_;
  metadata.reflection = Message_Field_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message_New::kComponentTypeNameFieldNumber;
#endif  // !_MSC_VER

Message_New::Message_New()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message_New::InitAsDefaultInstance() {
}

Message_New::Message_New(const Message_New& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message_New::SharedCtor() {
  _cached_size_ = 0;
  componenttypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message_New::~Message_New() {
  SharedDtor();
}

void Message_New::SharedDtor() {
  if (componenttypename_ != &::google::protobuf::internal::kEmptyString) {
    delete componenttypename_;
  }
  if (this != default_instance_) {
  }
}

void Message_New::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_New::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_New_descriptor_;
}

const Message_New& Message_New::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Message_New* Message_New::default_instance_ = NULL;

Message_New* Message_New::New() const {
  return new Message_New;
}

void Message_New::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_componenttypename()) {
      if (componenttypename_ != &::google::protobuf::internal::kEmptyString) {
        componenttypename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_New::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string componentTypeName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componenttypename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->componenttypename().data(), this->componenttypename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message_New::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string componentTypeName = 1;
  if (has_componenttypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->componenttypename().data(), this->componenttypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->componenttypename(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message_New::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string componentTypeName = 1;
  if (has_componenttypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->componenttypename().data(), this->componenttypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->componenttypename(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message_New::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string componentTypeName = 1;
    if (has_componenttypename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componenttypename());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_New::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_New* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_New*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_New::MergeFrom(const Message_New& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componenttypename()) {
      set_componenttypename(from.componenttypename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_New::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_New::CopyFrom(const Message_New& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_New::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Message_New::Swap(Message_New* other) {
  if (other != this) {
    std::swap(componenttypename_, other->componenttypename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_New::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_New_descriptor_;
  metadata.reflection = Message_New_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message_Return::kReturnValueFieldNumber;
#endif  // !_MSC_VER

Message_Return::Message_Return()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message_Return::InitAsDefaultInstance() {
  returnvalue_ = const_cast< ::reef::Argument*>(&::reef::Argument::default_instance());
}

Message_Return::Message_Return(const Message_Return& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message_Return::SharedCtor() {
  _cached_size_ = 0;
  returnvalue_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message_Return::~Message_Return() {
  SharedDtor();
}

void Message_Return::SharedDtor() {
  if (this != default_instance_) {
    delete returnvalue_;
  }
}

void Message_Return::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Return::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Return_descriptor_;
}

const Message_Return& Message_Return::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Message_Return* Message_Return::default_instance_ = NULL;

Message_Return* Message_Return::New() const {
  return new Message_Return;
}

void Message_Return::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_returnvalue()) {
      if (returnvalue_ != NULL) returnvalue_->::reef::Argument::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_Return::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .reef.Argument returnValue = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_returnvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message_Return::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .reef.Argument returnValue = 1;
  if (has_returnvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->returnvalue(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message_Return::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .reef.Argument returnValue = 1;
  if (has_returnvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->returnvalue(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message_Return::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .reef.Argument returnValue = 1;
    if (has_returnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->returnvalue());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Return::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_Return* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_Return*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_Return::MergeFrom(const Message_Return& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_returnvalue()) {
      mutable_returnvalue()->::reef::Argument::MergeFrom(from.returnvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_Return::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Return::CopyFrom(const Message_Return& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Return::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Message_Return::Swap(Message_Return* other) {
  if (other != this) {
    std::swap(returnvalue_, other->returnvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_Return::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_Return_descriptor_;
  metadata.reflection = Message_Return_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Message_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Type_descriptor_;
}
bool Message_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Message_Type Message::TYPE_NEW;
const Message_Type Message::TYPE_FIELD;
const Message_Type Message::TYPE_CALL;
const Message_Type Message::TYPE_RETURN;
const Message_Type Message::TYPE_OTHER;
const Message_Type Message::Type_MIN;
const Message_Type Message::Type_MAX;
const int Message::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Message::kTypeFieldNumber;
const int Message::kDestinationFieldNumber;
const int Message::kMsgNewFieldNumber;
const int Message::kMsgFieldFieldNumber;
const int Message::kMsgCallFieldNumber;
const int Message::kMsgReturnFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Message::InitAsDefaultInstance() {
  msgnew_ = const_cast< ::reef::Message_New*>(&::reef::Message_New::default_instance());
  msgfield_ = const_cast< ::reef::Message_Field*>(&::reef::Message_Field::default_instance());
  msgcall_ = const_cast< ::reef::Message_Call*>(&::reef::Message_Call::default_instance());
  msgreturn_ = const_cast< ::reef::Message_Return*>(&::reef::Message_Return::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  destination_ = 0u;
  msgnew_ = NULL;
  msgfield_ = NULL;
  msgcall_ = NULL;
  msgreturn_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
    delete msgnew_;
    delete msgfield_;
    delete msgcall_;
    delete msgreturn_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    destination_ = 0u;
    if (has_msgnew()) {
      if (msgnew_ != NULL) msgnew_->::reef::Message_New::Clear();
    }
    if (has_msgfield()) {
      if (msgfield_ != NULL) msgfield_->::reef::Message_Field::Clear();
    }
    if (has_msgcall()) {
      if (msgcall_ != NULL) msgcall_->::reef::Message_Call::Clear();
    }
    if (has_msgreturn()) {
      if (msgreturn_ != NULL) msgreturn_->::reef::Message_Return::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .reef.Message.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::reef::Message_Type_IsValid(value)) {
            set_type(static_cast< ::reef::Message_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_destination;
        break;
      }
      
      // required uint32 destination = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destination:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destination_)));
          set_has_destination();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_msgNew;
        break;
      }
      
      // optional .reef.Message_New msgNew = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msgNew:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgnew()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_msgField;
        break;
      }
      
      // optional .reef.Message_Field msgField = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msgField:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgfield()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_msgCall;
        break;
      }
      
      // optional .reef.Message_Call msgCall = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msgCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgcall()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_msgReturn;
        break;
      }
      
      // optional .reef.Message_Return msgReturn = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msgReturn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgreturn()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .reef.Message.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // required uint32 destination = 2;
  if (has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->destination(), output);
  }
  
  // optional .reef.Message_New msgNew = 3;
  if (has_msgnew()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->msgnew(), output);
  }
  
  // optional .reef.Message_Field msgField = 4;
  if (has_msgfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->msgfield(), output);
  }
  
  // optional .reef.Message_Call msgCall = 5;
  if (has_msgcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->msgcall(), output);
  }
  
  // optional .reef.Message_Return msgReturn = 6;
  if (has_msgreturn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->msgreturn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .reef.Message.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // required uint32 destination = 2;
  if (has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->destination(), target);
  }
  
  // optional .reef.Message_New msgNew = 3;
  if (has_msgnew()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->msgnew(), target);
  }
  
  // optional .reef.Message_Field msgField = 4;
  if (has_msgfield()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->msgfield(), target);
  }
  
  // optional .reef.Message_Call msgCall = 5;
  if (has_msgcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->msgcall(), target);
  }
  
  // optional .reef.Message_Return msgReturn = 6;
  if (has_msgreturn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->msgreturn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .reef.Message.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required uint32 destination = 2;
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destination());
    }
    
    // optional .reef.Message_New msgNew = 3;
    if (has_msgnew()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgnew());
    }
    
    // optional .reef.Message_Field msgField = 4;
    if (has_msgfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgfield());
    }
    
    // optional .reef.Message_Call msgCall = 5;
    if (has_msgcall()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgcall());
    }
    
    // optional .reef.Message_Return msgReturn = 6;
    if (has_msgreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgreturn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_destination()) {
      set_destination(from.destination());
    }
    if (from.has_msgnew()) {
      mutable_msgnew()->::reef::Message_New::MergeFrom(from.msgnew());
    }
    if (from.has_msgfield()) {
      mutable_msgfield()->::reef::Message_Field::MergeFrom(from.msgfield());
    }
    if (from.has_msgcall()) {
      mutable_msgcall()->::reef::Message_Call::MergeFrom(from.msgcall());
    }
    if (from.has_msgreturn()) {
      mutable_msgreturn()->::reef::Message_Return::MergeFrom(from.msgreturn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_msgnew()) {
    if (!this->msgnew().IsInitialized()) return false;
  }
  if (has_msgfield()) {
    if (!this->msgfield().IsInitialized()) return false;
  }
  if (has_msgcall()) {
    if (!this->msgcall().IsInitialized()) return false;
  }
  if (has_msgreturn()) {
    if (!this->msgreturn().IsInitialized()) return false;
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(destination_, other->destination_);
    std::swap(msgnew_, other->msgnew_);
    std::swap(msgfield_, other->msgfield_);
    std::swap(msgcall_, other->msgcall_);
    std::swap(msgreturn_, other->msgreturn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace reef

// @@protoc_insertion_point(global_scope)
